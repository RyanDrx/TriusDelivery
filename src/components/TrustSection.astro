---
import Section from '@components/Section.astro';

interface Props {
    'data-sb-field-path'?: string;
}

const { 'data-sb-field-path': fieldPath } = Astro.props;

// Testimonials data - separated from layout
const testimonials = [
    {
        id: 'zimmer',
        quote: "Working with Trius LLC has been a game-changer for our practice. Their team is always on time, professional, and communicates clearly every step of the way. The real-time tracking and photo verification are features we didn't know we needed, but now can't imagine being without.",
        author: 'Operations Manager',
        company: 'ZimmerBiomet Orthopedics',
        initial: 'Z',
        icon: 'heroicons:star-solid',
        color: 'primary'
    },
    {
        id: 'stclaire',
        quote: 'Trius LLC has made a tremendous difference in how we manage our surgical instrument trays. Their drivers understand the importance of sterile processingâ€”everything is scanned, documented, and tracked with precision. Thanks to Trius LLC, our SPD can focus on quality and turnaround instead of chasing down deliveries.',
        author: 'SPD Staff',
        company: 'St. Claire Hospital',
        initial: 'S',
        icon: 'heroicons:chart-bar',
        color: 'secondary'
    },
    {
        id: 'sales',
        quote: 'Trius LLC has been a huge asset to my work as a sales rep. Knowing that my instrument trays and implants are picked up and delivered on time means I can focus on my surgeons and their cases instead of worrying about logistics. Having real-time tracking has been a game changer.',
        author: 'Sales Representative',
        company: 'Medical Device Sales',
        initial: 'R',
        icon: 'heroicons:briefcase',
        color: 'accent'
    }
];
---

<Section class='py-14 lg:py-18' data-sb-field-path={fieldPath}>
    <div class='max-w-5xl mx-auto px-6'>
        <!-- Section Header -->
        <div class='text-center mb-16' data-animate='fade-in-up'>
            <h2 class='text-4xl lg:text-5xl font-bold text-neutral-dark mb-5 leading-tight'>Trusted by Healthcare Professionals</h2>
            <p class='text-lg text-neutral max-w-2xl mx-auto leading-relaxed'>
                Healthcare organizations across the Pacific Northwest rely on Trius for secure, compliant, and timely medical deliveries.
            </p>
        </div>

        <!-- Testimonial Slideshow -->
        <div class='testimonial-slideshow mb-16 max-w-4xl mx-auto' data-animate='fade-in-up'>
            <div class='testimonial-container relative overflow-hidden'>
                {
                    testimonials.map((testimonial, index) => (
                        <div
                            class={`testimonial-slide absolute inset-0 transition-all duration-500 ${index === 0 ? 'opacity-100 translate-x-0' : 'opacity-0 translate-x-full'}`}
                            data-slide={index}
                        >
                            <div class={`testimonial-card testimonial-${testimonial.id} relative rounded-3xl p-8 lg:p-10 border border-white/30 backdrop-blur-sm overflow-hidden`}>
                                <!-- Background Image Layer -->
                                <div class={`absolute inset-0 bg-cover bg-center bg-no-repeat opacity-15 ${
                                    testimonial.id === 'zimmer' ? "bg-[url('/Images/medical monitor equip.webp')]" :
                                    testimonial.id === 'stclaire' ? "bg-[url('/Images/medical phials.webp')]" :
                                    "bg-[url('/Images/Courier handoff.webp')]"
                                }`}></div>

                                <!-- Gradient Overlay -->
                                <div class={`absolute inset-0 bg-gradient-to-br ${
                                    testimonial.id === 'zimmer' ? 'from-primary/20 via-white/90 to-secondary/10' :
                                    testimonial.id === 'stclaire' ? 'from-secondary/20 via-white/90 to-primary/10' :
                                    'from-accent/20 via-white/90 to-primary/10'
                                } rounded-3xl`}></div>

                                <!-- Content Layer -->
                                <div class='relative z-10 text-center'>
                                    <div class='flex justify-center mb-6'>
                                        {[...Array(5)].map(() => (
                                            <iconify-icon
                                                icon='lucide:star'
                                                width='20'
                                                height='20'
                                                style='color: #047857; fill: #047857;'
                                                stroke-width='1.5'
                                            />
                                        ))}
                                    </div>

                                    <blockquote
                                        class='text-slate-800 text-lg leading-relaxed mb-6 max-w-2xl mx-auto font-medium drop-shadow-sm'
                                        cite={testimonial.author}
                                    >
                                        "{testimonial.quote.split('.')[0]}. {testimonial.quote.split('.')[1]}."
                                    </blockquote>

                                    <div class='flex items-center justify-center'>
                                        <div class='text-center'>
                                            <div class='font-bold text-slate-800 drop-shadow-sm'>{testimonial.author}</div>
                                            <div class='text-sm text-slate-600 font-medium drop-shadow-sm'>{testimonial.company}</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    ))
                }
            </div>

            <!-- Navigation Controls -->
            <div class='flex items-center justify-center mt-8 space-x-6'>
                <button
                    class='nav-prev p-2 rounded-full bg-white border border-neutral-light hover:border-neutral transition-all disabled:opacity-50 disabled:cursor-not-allowed'
                    aria-label='Previous testimonial'
                >
                    <iconify-icon icon='lucide:chevron-left' width='20' height='20' style='color: #374151;' stroke-width='2'></iconify-icon>
                </button>

                <div class='flex items-center space-x-3'>
                    <span class='text-sm font-medium text-neutral testimonial-counter'>1 / {testimonials.length}</span>
                </div>

                <button
                    class='nav-next p-2 rounded-full bg-white border border-neutral-light hover:border-neutral transition-all disabled:opacity-50 disabled:cursor-not-allowed'
                    aria-label='Next testimonial'
                >
                    <iconify-icon icon='lucide:chevron-right' width='20' height='20' style='color: #374151;' stroke-width='2'
                    ></iconify-icon>
                </button>
            </div>
        </div>

        <!-- Trust Stats -->
        <div class='stats-container bg-white rounded-2xl p-6 lg:p-8 border border-neutral-light' data-animate='fade-in-up'>
            <div class='grid md:grid-cols-3 gap-6 text-center'>
                <div class='stat-item'>
                    <iconify-icon icon='lucide:clock' width='24' height='24' style='color: #16a34a; margin: 0 auto 16px;' stroke-width='1.5'
                    ></iconify-icon>
                    <div class='stat-number text-4xl font-bold text-neutral-dark mb-1 font-mono tabular-nums'>99.9%</div>
                    <div class='text-base text-neutral'>On-time</div>
                </div>

                <div class='stat-item'>
                    <iconify-icon icon='lucide:phone' width='24' height='24' style='color: #374151; margin: 0 auto 16px;' stroke-width='1.5'
                    ></iconify-icon>
                    <div class='stat-number text-4xl font-bold text-neutral-dark mb-1 font-mono tabular-nums'>24/7</div>
                    <div class='text-base text-neutral'>Response</div>
                </div>

                <div class='stat-item'>
                    <iconify-icon
                        icon='lucide:shield-check'
                        width='24'
                        height='24'
                        style='color: #16a34a; margin: 0 auto 16px;'
                        stroke-width='1.5'></iconify-icon>
                    <div class='stat-number text-4xl font-bold text-neutral-dark mb-1 font-mono tabular-nums'>100%</div>
                    <div class='text-base text-neutral'>HIPAA</div>
                </div>
            </div>
        </div>
    </div>
</Section>

<script>
    // Smooth scroll animation with Intersection Observer
    const observerOptions = {
        root: null,
        rootMargin: '0px 0px -10% 0px',
        threshold: [0, 0.25, 0.5, 0.75, 1]
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            const target = entry.target as HTMLElement;
            const animationType = target.getAttribute('data-animate');

            if (entry.isIntersecting) {
                if (animationType === 'fade-in-up') {
                    target.classList.add('animate-fade-in-up');
                } else if (animationType === 'stagger-up') {
                    const children = target.children;
                    Array.from(children).forEach((child, index) => {
                        setTimeout(() => {
                            (child as HTMLElement).classList.add('animate-fade-in-up');
                        }, index * 200);
                    });
                }
            }
        });
    }, observerOptions);

    // Testimonial slideshow functionality
    class TestimonialSlideshow {
        private container: HTMLElement | null;
        private slides: NodeListOf<Element>;
        private prevBtn: HTMLElement | null;
        private nextBtn: HTMLElement | null;
        private counter: HTMLElement | null;
        private currentSlide: number;

        constructor() {
            this.container = document.querySelector('.testimonial-slideshow');
            this.slides = document.querySelectorAll('.testimonial-slide');
            this.prevBtn = document.querySelector('.nav-prev');
            this.nextBtn = document.querySelector('.nav-next');
            this.counter = document.querySelector('.testimonial-counter');
            this.currentSlide = 0;

            if (this.container && this.slides.length > 0) {
                this.init();
            }
        }

        private init(): void {
            this.showSlide(this.currentSlide);

            // Set up navigation buttons
            if (this.prevBtn) {
                this.prevBtn.addEventListener('click', () => this.previousSlide());
            }
            if (this.nextBtn) {
                this.nextBtn.addEventListener('click', () => this.nextSlide());
            }

            // Add keyboard navigation
            this.initKeyboardEvents();

            // Add touch/swipe support for mobile
            this.initTouchEvents();
        }

        private initKeyboardEvents(): void {
            document.addEventListener('keydown', (e) => {
                if (e.key === 'ArrowLeft') {
                    e.preventDefault();
                    this.previousSlide();
                } else if (e.key === 'ArrowRight') {
                    e.preventDefault();
                    this.nextSlide();
                }
            });
        }

        private initTouchEvents(): void {
            if (!this.container) return;

            let startX = 0;
            let startY = 0;
            let distX = 0;
            let distY = 0;

            this.container.addEventListener(
                'touchstart',
                (e) => {
                    const touch = e.touches[0];
                    startX = touch.pageX;
                    startY = touch.pageY;
                },
                { passive: true }
            );

            this.container.addEventListener('touchmove', (e) => {
                e.preventDefault(); // Prevent scrolling while swiping
                const touch = e.touches[0];
                distX = touch.pageX - startX;
                distY = touch.pageY - startY;
            });

            this.container.addEventListener(
                'touchend',
                () => {
                    // Only trigger if horizontal swipe is more prominent than vertical
                    if (Math.abs(distX) > Math.abs(distY) && Math.abs(distX) > 50) {
                        if (distX > 0) {
                            // Swipe right - previous slide
                            this.previousSlide();
                        } else {
                            // Swipe left - next slide
                            this.nextSlide();
                        }
                    }
                    // Reset values
                    startX = 0;
                    startY = 0;
                    distX = 0;
                    distY = 0;
                },
                { passive: true }
            );
        }

        private showSlide(index: number): void {
            this.slides.forEach((slide, i) => {
                const slideEl = slide as HTMLElement;
                if (i === index) {
                    slideEl.classList.remove('opacity-0', 'translate-x-full', 'translate-x-[-100%]');
                    slideEl.classList.add('opacity-100', 'translate-x-0');
                } else {
                    slideEl.classList.remove('opacity-100', 'translate-x-0');
                    if (i < index) {
                        slideEl.classList.add('opacity-0', 'translate-x-[-100%]');
                        slideEl.classList.remove('translate-x-full');
                    } else {
                        slideEl.classList.add('opacity-0', 'translate-x-full');
                        slideEl.classList.remove('translate-x-[-100%]');
                    }
                }
            });

            // Update counter
            if (this.counter) {
                this.counter.textContent = `${index + 1} / ${this.slides.length}`;
            }

            // Update button states
            this.updateNavButtons();
        }

        private updateNavButtons(): void {
            if (this.prevBtn) {
                (this.prevBtn as HTMLButtonElement).disabled = this.currentSlide === 0;
            }
            if (this.nextBtn) {
                (this.nextBtn as HTMLButtonElement).disabled = this.currentSlide === this.slides.length - 1;
            }
        }

        private previousSlide(): void {
            if (this.currentSlide > 0) {
                this.currentSlide--;
                this.showSlide(this.currentSlide);
            }
        }

        private nextSlide(): void {
            if (this.currentSlide < this.slides.length - 1) {
                this.currentSlide++;
                this.showSlide(this.currentSlide);
            }
        }
    }

    // Wait for DOM to be fully loaded
    document.addEventListener('DOMContentLoaded', () => {
        // Initialize testimonial slideshow
        new TestimonialSlideshow();

        // Observe elements with animation attributes
        const animatedElements = document.querySelectorAll('[data-animate]');
        animatedElements.forEach((el) => observer.observe(el));

        // Counter animation for stats
        const animateCounters = () => {
            const counters = document.querySelectorAll('.stat-number');
            counters.forEach((counter) => {
                const target = counter.textContent;
                if (!target) return;

                const isPercentage = target.includes('%');
                const isPlus = target.includes('+');
                const isSlash = target.includes('/');

                let finalValue;
                let suffix = '';

                if (isPercentage) {
                    finalValue = parseFloat(target);
                    suffix = '%';
                } else if (isPlus) {
                    finalValue = parseInt(target);
                    suffix = '+';
                } else if (isSlash) {
                    counter.textContent = target; // Keep as is for "24/7"
                    return;
                } else {
                    finalValue = parseInt(target);
                }

                let currentValue = 0;
                const increment = finalValue / 100;
                const duration = 2000; // 2 seconds
                const stepTime = duration / 100;

                const timer = setInterval(() => {
                    currentValue += increment;
                    if (currentValue >= finalValue) {
                        counter.textContent = finalValue + suffix;
                        clearInterval(timer as any);
                    } else {
                        counter.textContent = Math.floor(currentValue) + suffix;
                    }
                }, stepTime);
            });
        };

        // Trigger counter animation when stats section is visible
        const statsContainer = document.querySelector('.stats-container');
        if (statsContainer) {
            const statsObserver = new IntersectionObserver(
                (entries) => {
                    entries.forEach((entry) => {
                        if (entry.isIntersecting) {
                            animateCounters();
                            statsObserver.unobserve(entry.target);
                        }
                    });
                },
                { threshold: 0.5 }
            );

            statsObserver.observe(statsContainer);
        }
    });
</script>

<style>
    /* Animation Keyframes */
    @keyframes fade-in-up {
        0% {
            opacity: 0;
            transform: translateY(40px);
        }
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes scale-in {
        0% {
            opacity: 0;
            transform: scale(0.8);
        }
        100% {
            opacity: 1;
            transform: scale(1);
        }
    }

    /* Apply animations */
    .animate-fade-in-up {
        opacity: 0;
        animation: fade-in-up 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    .animate-scale-in {
        opacity: 0;
        animation: scale-in 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    }

    /* Testimonial Slideshow */
    .testimonial-slideshow {
        position: relative;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
        -webkit-tap-highlight-color: transparent;
        overflow: visible;
    }

    .testimonial-container {
        position: relative;
        min-height: 280px;
        overflow: visible;
    }

    .testimonial-slide {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        width: 100%;
        transition: all 0.25s ease-out;
    }

    /* Navigation Controls */
    .nav-prev,
    .nav-next {
        transition: all 0.15s ease;
    }

    .nav-prev:hover:not(:disabled),
    .nav-next:hover:not(:disabled) {
        transform: scale(1.05);
        border-color: #6b7280;
    }

    /* Testimonial Cards */
    .testimonial-card {
        position: relative;
        transition:
            transform 0.15s ease,
            box-shadow 0.15s ease;
        box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);
    }

    .testimonial-card:hover {
        transform: scale(1.01);
        box-shadow: 0 16px 32px rgba(0, 0, 0, 0.12);
    }

    /* Stats Container */
    .stats-container {
        transition:
            transform 0.15s ease,
            box-shadow 0.15s ease;
        box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);
    }

    /* Stat Items */
    .stat-item {
        position: relative;
    }

    .stat-number {
        font-feature-settings: 'tnum';
        line-height: 1;
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
        .testimonial-container {
            min-height: 240px;
        }

        .testimonial-card {
            padding: 1.5rem;
        }

        .stats-container {
            padding: 1.5rem;
        }

        .stat-number {
            font-size: 2.5rem;
        }
    }

    /* Smooth transitions for all interactive elements */
    * {
        -webkit-tap-highlight-color: transparent;
    }

    /* Reduced motion preferences */
    @media (prefers-reduced-motion: reduce) {
        .animate-fade-in-up,
        .animate-scale-in {
            opacity: 1;
            transform: none;
            animation: none;
        }

        .testimonial-card:hover,
        .stat-item:hover {
            transform: none;
        }

        .testimonial-slide {
            transform: none !important;
        }
    }

    /* High contrast mode support */
    @media (prefers-contrast: high) {
        .testimonial-card,
        .stats-container {
            border-width: 3px;
            border-color: currentColor;
        }

        .trust-bg-pattern {
            display: none;
        }
    }
</style>
