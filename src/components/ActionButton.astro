---
import { type ActionButton } from 'types';

interface Props extends ActionButton {
    class?: string;
    'data-sb-field-path'?: string;
    showArrow?: boolean;
}

const { label, ariaLabel, url, theme, class: className, 'data-sb-field-path': fieldPath, showArrow = false } = Astro.props;

const themeClassMap = {
    primary: 'btn-primary',
    secondary: 'btn-secondary',
    accent: 'btn-accent',
    neutral: 'btn-neutral'
};
---

{
    url ? (
        <a
            class:list={['btn', themeClassMap[theme || 'primary'], className]}
            href={url}
            aria-label={ariaLabel}
            data-sb-field-path={fieldPath}
        >
            <span data-sb-field-path={fieldPath ? '.label' : undefined}>{label}</span>
            {showArrow && (
                <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                </svg>
            )}
        </a>
    ) : (
        <button class:list={['btn', themeClassMap[theme || 'primary'], className]} aria-label={ariaLabel} data-sb-field-path={fieldPath}>
            <span data-sb-field-path={fieldPath ? '.label' : undefined}>{label}</span>
            {showArrow && (
                <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                </svg>
            )}
        </button>
    )
}
