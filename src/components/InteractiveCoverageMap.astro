---
export interface Props {
    title?: string;
    subtitle?: string;
    description?: string;
    'data-sb-field-path'?: string;
}

const {
    title = 'Service Coverage Map',
    subtitle = 'Visualize our service areas',
    description = 'Our comprehensive coverage spans across the Pacific Northwest and Northern California, connecting major medical facilities, research centers, and healthcare networks.',
    'data-sb-field-path': fieldPath
} = Astro.props;

// State data with cities (expanded to 20 cities per state)
const coverageStates = [
    {
        id: 'washington',
        name: 'Washington',
        abbreviation: 'WA',
        color: 'primary',
        cities: [
            'Seattle',
            'Spokane',
            'Tacoma',
            'Vancouver',
            'Bellevue',
            'Kent',
            'Everett',
            'Renton',
            'Federal Way',
            'Yakima',
            'Bellingham',
            'Olympia',
            'Redmond',
            'Kirkland',
            'Auburn',
            'Puyallup',
            'Lakewood',
            'Bothell',
            'Richland',
            'Kennewick',
            'Issaquah',
            'Sammamish',
            'Burien',
            'SeaTac',
            'Tukwila',
            'Shoreline',
            'Lynnwood',
            'Edmonds',
            'Mountlake Terrace',
            'Mukilteo',
            'Mill Creek',
            'Bothell',
            'Woodinville',
            'Duvall',
            'Carnation',
            'Snoqualmie',
            'North Bend',
            'Maple Valley',
            'Covington',
            'Black Diamond'
        ]
    },
    {
        id: 'oregon',
        name: 'Oregon',
        abbreviation: 'OR',
        color: 'secondary',
        cities: [
            'Portland',
            'Eugene',
            'Salem',
            'Gresham',
            'Hillsboro',
            'Bend',
            'Beaverton',
            'Medford',
            'Springfield',
            'Corvallis',
            'Albany',
            'Tigard',
            'Lake Oswego',
            'Keizer',
            'Grants Pass',
            'Oregon City',
            'McMinnville',
            'Redmond',
            'Tualatin',
            'West Linn',
            'Milwaukie',
            'Gladstone',
            'Happy Valley',
            'Clackamas',
            'Wilsonville',
            'Sherwood',
            'King City',
            'Durham',
            'Newberg',
            'Dayton',
            'Forest Grove',
            'Cornelius',
            'Aloha',
            'Cedar Hills',
            'Cedar Mill',
            'Bethany',
            'Oak Hills',
            'Raleigh Hills',
            'Garden Home',
            'Metzger'
        ]
    },
    {
        id: 'idaho',
        name: 'Idaho',
        abbreviation: 'ID',
        color: 'accent',
        cities: [
            'Boise',
            'Meridian',
            'Nampa',
            'Idaho Falls',
            'Pocatello',
            'Caldwell',
            "Coeur d'Alene",
            'Twin Falls',
            'Lewiston',
            'Post Falls',
            'Rexburg',
            'Eagle',
            'Kuna',
            'Blackfoot',
            'Garden City',
            'Star',
            'Hayden',
            'Ammon',
            'Moscow',
            'Sandpoint',
            'Jerome',
            'Burley',
            'Mountain Home',
            'Chubbuck',
            'Preston',
            'Soda Springs',
            'Rigby',
            'Shelley',
            'Iona',
            'Ucon',
            'Rathdrum',
            'Spirit Lake',
            'Athol',
            'Dalton Gardens',
            'Fernan Lake Village',
            'Huetter',
            'Middleton',
            'Notus',
            'Parma',
            'Wilder'
        ]
    },
    {
        id: 'montana',
        name: 'Montana',
        abbreviation: 'MT',
        color: 'neutral',
        cities: [
            'Billings',
            'Missoula',
            'Great Falls',
            'Bozeman',
            'Butte',
            'Helena',
            'Kalispell',
            'Havre',
            'Anaconda',
            'Miles City',
            'Livingston',
            'Whitefish',
            'Belgrade',
            'Laurel',
            'Lewistown',
            'Glendive',
            'Sidney',
            'Hamilton',
            'Columbia Falls',
            'Polson',
            'Stevensville',
            'Darby',
            'Victor',
            'Corvallis',
            'Florence',
            'Lolo',
            'Frenchtown',
            'Alberton',
            'Superior',
            'Thompson Falls',
            'Trout Creek',
            'Noxon',
            'Libby',
            'Troy',
            'Eureka',
            'Fortine',
            'Trego',
            'Rexford',
            'West Glacier',
            'Coram'
        ]
    },
    {
        id: 'california',
        name: 'Northern California',
        abbreviation: 'CA',
        color: 'primary',
        cities: [
            'San Francisco',
            'Sacramento',
            'Oakland',
            'San Jose',
            'Fresno',
            'Stockton',
            'Modesto',
            'Santa Rosa',
            'Salinas',
            'Vallejo',
            'Berkeley',
            'Richmond',
            'Antioch',
            'Concord',
            'Fairfield',
            'Vacaville',
            'San Mateo',
            'Fremont',
            'Hayward',
            'Sunnyvale',
            'Santa Clara',
            'Palo Alto',
            'Mountain View',
            'Cupertino',
            'Los Altos',
            'Milpitas',
            'Union City',
            'Newark',
            'San Leandro',
            'Castro Valley',
            'San Lorenzo',
            'Alameda',
            'Emeryville',
            'Albany',
            'El Cerrito',
            'San Rafael',
            'Novato',
            'Petaluma',
            'Rohnert Park',
            'Sebastopol'
        ]
    }
];
---

<style>
    .coverage-map-container {
        background: linear-gradient(
            135deg,
            theme('colors.base-200') 0%,
            rgba(28, 60, 61, 0.1) 25%,
            rgba(159, 115, 88, 0.1) 75%,
            theme('colors.base-200') 100%
        );
        border-radius: 1rem;
        padding: 3rem 2rem;
    }

    .map-content {
        display: grid;
        grid-template-columns: 6fr 9fr;
        gap: 3rem;
        max-width: 1200px;
        margin: 0 auto;
        align-items: start;
    }

    .decorative-map {
        border-radius: 1rem;
        padding: 2rem 2rem 2rem 2rem;
        text-align: center;
        min-height: 400px;
        box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
        position: relative;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
    }

    .map-visual {
        position: absolute;
        top: 0;
        left: -10%;
        width: 120%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1;
    }

    .coverage-map-svg-container {
        width: 100%;
        height: 100%;
        position: relative;
        filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
        transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        animation: float 6s ease-in-out infinite;
        opacity: 0.3;
    }

    .coverage-map-svg-container::before {
        content: '';
        position: absolute;
        top: -10px;
        left: -10px;
        right: -10px;
        bottom: -10px;

        border-radius: 50%;
        opacity: 0;
        transition: opacity 0.4s ease;
        animation: rotate 8s linear infinite;
        z-index: -1;
    }

    .coverage-map-svg-container:hover {
        transform: scale(1.1) rotate(5deg);
        animation-play-state: paused;
    }

    .coverage-map-svg-container:hover::before {
        opacity: 1;
        animation-duration: 2s;
    }

    .coverage-map-svg {
        width: 110%;
        height: 100%;
        object-fit: contain;
        margin-left: -12%;
        filter: brightness(0) invert(1) drop-shadow(0 0 4px rgba(255, 255, 255, 0.5));
        transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        animation: pulse-glow 4s ease-in-out infinite;
    }

    .map-content-overlay {
        position: relative;
        z-index: 10;
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(10px);
        border-radius: 0.75rem;
        padding: 1rem 1.5rem;
        border: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        margin-bottom: 4rem;
        max-width: 70%;
        margin-left: auto;
        margin-right: 0rem;
    }

    .coverage-map-svg:hover {
        transform: scale(1.05);
    }

    /* Cool animations */
    @keyframes float {
        0%,
        100% {
            transform: translateY(0px) rotate(0deg);
        }
        33% {
            transform: translateY(-8px) rotate(1deg);
        }
        66% {
            transform: translateY(-4px) rotate(-1deg);
        }
    }

    @keyframes rotate {
        from {
            transform: rotate(0deg);
        }
        to {
            transform: rotate(360deg);
        }
    }

    @keyframes pulse-glow {
        0%,
        100% {
            filter: brightness(0) invert(1) drop-shadow(0 0 4px rgba(255, 255, 255, 0.5));
        }
        50% {
            filter: brightness(0) invert(1) drop-shadow(0 0 8px rgba(255, 255, 255, 0.7));
        }
    }

    @keyframes pulse {
        0% {
            transform: scale(1);
        }
        50% {
            transform: scale(1.05);
        }
        100% {
            transform: scale(1);
        }
    }

    @keyframes ripple {
        to {
            transform: scale(4);
            opacity: 0;
        }
    }

    .state-selector {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .state-box {
        background: white;
        border: 2px solid theme('colors.base-300');
        border-radius: 0.75rem;
        padding: 1rem 1.5rem;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .state-box:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px -5px rgba(0, 0, 0, 0.15);
    }

    .state-box.active {
        border-color: theme('colors.primary.DEFAULT');
        background: linear-gradient(135deg, theme('colors.primary.DEFAULT') / 5, theme('colors.primary.light') / 10);
        transform: translateY(-2px);
        box-shadow: 0 8px 20px -5px rgba(0, 0, 0, 0.15);
    }

    .state-box.primary {
        border-color: theme('colors.primary.light');
    }

    .state-box.primary:hover,
    .state-box.primary.active {
        border-color: theme('colors.primary.DEFAULT');
        background: linear-gradient(135deg, theme('colors.primary.DEFAULT') / 5, theme('colors.primary.light') / 10);
    }

    .state-box.secondary {
        border-color: theme('colors.secondary.light');
    }

    .state-box.secondary:hover,
    .state-box.secondary.active {
        border-color: theme('colors.secondary.DEFAULT');
        background: linear-gradient(135deg, theme('colors.secondary.DEFAULT') / 5, theme('colors.secondary.light') / 10);
    }

    .state-box.accent {
        border-color: theme('colors.accent.light');
    }

    .state-box.accent:hover,
    .state-box.accent.active {
        border-color: theme('colors.accent.DEFAULT');
        background: linear-gradient(135deg, theme('colors.accent.DEFAULT') / 5, theme('colors.accent.light') / 10);
    }

    .state-box.neutral {
        border-color: theme('colors.neutral.light');
    }

    .state-box.neutral:hover,
    .state-box.neutral.active {
        border-color: theme('colors.neutral.DEFAULT');
        background: linear-gradient(135deg, theme('colors.neutral.DEFAULT') / 5, theme('colors.neutral.light') / 10);
    }

    .state-name {
        font-size: 1.1rem;
        font-weight: 600;
        color: theme('colors.primary.DEFAULT');
    }

    .state-abbr {
        font-size: 1.5rem;
        font-weight: 700;
        color: theme('colors.neutral.light');
        font-family: theme('fontFamily.brand');
    }

    .cities-display {
        background: white;
        border-radius: 1rem;
        padding: 2rem;
        box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
        min-height: 300px;
        grid-column: 1 / -1;
        margin-top: 2rem;
    }

    .cities-header {
        margin-bottom: 1.5rem;
        text-align: center;
    }

    .cities-grid {
        display: flex !important;
        flex-wrap: wrap !important;
        gap: 0.5rem !important;
        justify-content: flex-start !important;
        margin-bottom: 2rem !important;
        padding: 1.5rem !important;
        background: #ffffff !important;
        border-radius: 8px !important;
        border: 1px solid #e5e7eb !important;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1) !important;
        /* Force reload v2 */
    }

    .city-pill {
        background: #f3f4f6;
        color: #374151;
        padding: 0.375rem 0.75rem;
        border-radius: 20px;
        font-size: 0.875rem;
        font-weight: 500;
        transition: all 0.2s ease;
        cursor: pointer;
        border: 1px solid #d1d5db;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
        position: relative;
        display: inline-block;
        white-space: nowrap;
        text-align: center;
        min-width: fit-content;
        letter-spacing: 0.025em;
    }

    .city-pill::before {
        display: none;
    }

    .city-pill:hover {
        transform: translateY(-1px);
        background: #1c3c3d;
        color: white;
        border-color: #1c3c3d;
        box-shadow: 0 2px 4px rgba(28, 60, 61, 0.2);
    }

    .city-pill:focus {
        outline: 2px solid #9f7358;
        outline-offset: 2px;
    }

    .city-pill:active {
        transform: translateY(0px);
        box-shadow: 0 1px 2px rgba(28, 60, 61, 0.2);
    }

    .additional-service-note {
        background: linear-gradient(135deg, theme('colors.base-100'), theme('colors.base-200'));
        border: 2px dashed theme('colors.primary.light');
        border-radius: 1rem;
        padding: 1.5rem;
        text-align: center;
        margin-top: 1.5rem;
        position: relative;
        overflow: hidden;
    }

    .additional-service-note::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: linear-gradient(45deg, transparent, theme('colors.primary.DEFAULT') / 5, transparent);
        transform: rotate(45deg);
        animation: shimmer 3s ease-in-out infinite;
    }

    @keyframes shimmer {
        0%,
        100% {
            transform: translateX(-100%) translateY(-100%) rotate(45deg);
        }
        50% {
            transform: translateX(0%) translateY(0%) rotate(45deg);
        }
    }

    @keyframes pulse {
        0% {
            transform: scale(1);
        }
        50% {
            transform: scale(1.1);
        }
        100% {
            transform: scale(1);
        }
    }

    @keyframes ripple {
        to {
            transform: scale(4);
            opacity: 0;
        }
    }

    .contact-highlight {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        background: theme('colors.primary.DEFAULT');
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
        margin-top: 1rem;
    }

    .contact-highlight:hover {
        background: theme('colors.primary.dark');
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }

    .placeholder-text {
        text-align: center;
        color: theme('colors.neutral.DEFAULT');
        padding: 2rem;
        font-style: italic;
    }

    @media (max-width: 768px) {
        .coverage-map-container {
            padding: 2rem 1rem;
        }

        .map-content {
            grid-template-columns: 1fr;
            gap: 2rem;
            text-align: center;
        }

        .state-selector {
            order: -1;
        }

        .state-box {
            padding: 0.75rem 1rem;
        }

        .state-name {
            font-size: 1rem;
        }

        .state-abbr {
            font-size: 1.25rem;
        }
    }
</style>

<div class="coverage-map-container" data-sb-field-path={fieldPath}>
    <!-- Section Header -->
    <div class="text-center mb-8">
        <h2 class="text-3xl lg:text-4xl font-bold bg-gradient-to-r from-primary via-secondary to-accent bg-clip-text text-transparent mb-4">
            {title}
        </h2>
        <p class="text-lg text-neutral-light max-w-2xl mx-auto mb-2">
            {subtitle}
        </p>
        <p class="text-base-content max-w-3xl mx-auto">
            {description}
        </p>
    </div>

    <!-- Interactive Map Content -->
    <div class="map-content">
        <!-- Decorative Map Visual -->
        <div class="decorative-map bg-primary/90">
            <div class="map-visual">
                <div class="coverage-map-svg-container">
                    <img src="/coverage/TRIUS_COVERAGE.svg" alt="Trius Coverage Map" class="coverage-map-svg" />
                </div>
            </div>
            <div class="map-content-overlay -mt-8">
                <h3 class="text-lg font-bold text-white mb-1">Coverage Area</h3>
                <p class="text-white text-xs opacity-90 mb-1">Pacific Northwest & Northern California</p>
            </div>
        </div>

        <!-- Interactive State Selector -->
        <div class="state-selector">
            {
                coverageStates.map((state) => (
                    <div
                        class={`state-box ${state.color}`}
                        data-state={state.id}
                        tabindex="0"
                        role="button"
                        aria-label={`Select ${state.name} to view cities`}
                    >
                        <div class="state-name">{state.name}</div>
                        <div class="state-abbr">{state.abbreviation}</div>
                    </div>
                ))
            }
        </div>
    </div>

    <!-- Cities Display -->
    <div class="cities-display">
        <div class="cities-header">
            <h3 id="selected-state-name" class="text-2xl font-bold text-primary mb-2">Select a State</h3>
            <p class="text-base-content">Click a state to view the cities we serve</p>
        </div>

        <div id="cities-container">
            <div class="placeholder-text">
                <iconify-icon icon="heroicons:map-pin" width="32" height="32" class="mb-2"></iconify-icon>
                <p>Choose a state from the left to see our service cities</p>
            </div>
        </div>

        <div class="additional-service-note">
            <iconify-icon icon="heroicons:plus-circle" width="24" height="24" class="text-primary mb-2"></iconify-icon>
            <h4 class="font-bold text-primary mb-2">Additional Areas Served</h4>
            <p class="text-base-content mb-3">
                We serve many more cities and rural areas beyond those listed above. Our network continues to expand to better serve the
                medical community.
            </p>
            <a href="/contact" class="contact-highlight">
                <iconify-icon icon="heroicons:phone" width="20" height="20"></iconify-icon>
                Contact Us About Your Area
            </a>
        </div>
    </div>
</div>

<script>
    // State and cities functionality
    document.addEventListener('DOMContentLoaded', function () {
        const stateBoxes = document.querySelectorAll('.state-box');
        const selectedStateName = document.getElementById('selected-state-name');
        const citiesContainer = document.getElementById('cities-container');

        // State data embedded for JavaScript access (expanded to 20 cities per state)
        const stateData = {
            washington: {
                name: 'Washington',
                cities: [
                    'Seattle',
                    'Spokane',
                    'Tacoma',
                    'Vancouver',
                    'Bellevue',
                    'Kent',
                    'Everett',
                    'Renton',
                    'Federal Way',
                    'Yakima',
                    'Bellingham',
                    'Olympia',
                    'Redmond',
                    'Kirkland',
                    'Auburn',
                    'Puyallup',
                    'Lakewood',
                    'Bothell',
                    'Richland',
                    'Kennewick',
                    'Issaquah',
                    'Sammamish',
                    'Burien',
                    'SeaTac',
                    'Tukwila',
                    'Shoreline',
                    'Lynnwood',
                    'Edmonds',
                    'Mountlake Terrace',
                    'Mukilteo',
                    'Mill Creek',
                    'Bothell',
                    'Woodinville',
                    'Duvall',
                    'Carnation',
                    'Snoqualmie',
                    'North Bend',
                    'Maple Valley',
                    'Covington',
                    'Black Diamond'
                ]
            },
            oregon: {
                name: 'Oregon',
                cities: [
                    'Portland',
                    'Eugene',
                    'Salem',
                    'Gresham',
                    'Hillsboro',
                    'Bend',
                    'Beaverton',
                    'Medford',
                    'Springfield',
                    'Corvallis',
                    'Albany',
                    'Tigard',
                    'Lake Oswego',
                    'Keizer',
                    'Grants Pass',
                    'Oregon City',
                    'McMinnville',
                    'Redmond',
                    'Tualatin',
                    'West Linn',
                    'Milwaukie',
                    'Gladstone',
                    'Happy Valley',
                    'Clackamas',
                    'Wilsonville',
                    'Sherwood',
                    'King City',
                    'Durham',
                    'Newberg',
                    'Dayton',
                    'Forest Grove',
                    'Cornelius',
                    'Aloha',
                    'Cedar Hills',
                    'Cedar Mill',
                    'Bethany',
                    'Oak Hills',
                    'Raleigh Hills',
                    'Garden Home',
                    'Metzger'
                ]
            },
            idaho: {
                name: 'Idaho',
                cities: [
                    'Boise',
                    'Meridian',
                    'Nampa',
                    'Idaho Falls',
                    'Pocatello',
                    'Caldwell',
                    "Coeur d'Alene",
                    'Twin Falls',
                    'Lewiston',
                    'Post Falls',
                    'Rexburg',
                    'Eagle',
                    'Kuna',
                    'Blackfoot',
                    'Garden City',
                    'Star',
                    'Hayden',
                    'Ammon',
                    'Moscow',
                    'Sandpoint',
                    'Jerome',
                    'Burley',
                    'Mountain Home',
                    'Chubbuck',
                    'Preston',
                    'Soda Springs',
                    'Rigby',
                    'Shelley',
                    'Iona',
                    'Ucon',
                    'Rathdrum',
                    'Spirit Lake',
                    'Athol',
                    'Dalton Gardens',
                    'Fernan Lake Village',
                    'Huetter',
                    'Middleton',
                    'Notus',
                    'Parma',
                    'Wilder'
                ]
            },
            montana: {
                name: 'Montana',
                cities: [
                    'Billings',
                    'Missoula',
                    'Great Falls',
                    'Bozeman',
                    'Butte',
                    'Helena',
                    'Kalispell',
                    'Havre',
                    'Anaconda',
                    'Miles City',
                    'Livingston',
                    'Whitefish',
                    'Belgrade',
                    'Laurel',
                    'Lewistown',
                    'Glendive',
                    'Sidney',
                    'Hamilton',
                    'Columbia Falls',
                    'Polson',
                    'Stevensville',
                    'Darby',
                    'Victor',
                    'Corvallis',
                    'Florence',
                    'Lolo',
                    'Frenchtown',
                    'Alberton',
                    'Superior',
                    'Thompson Falls',
                    'Trout Creek',
                    'Noxon',
                    'Libby',
                    'Troy',
                    'Eureka',
                    'Fortine',
                    'Trego',
                    'Rexford',
                    'West Glacier',
                    'Coram'
                ]
            },
            california: {
                name: 'Northern California',
                cities: [
                    'San Francisco',
                    'Sacramento',
                    'Oakland',
                    'San Jose',
                    'Fresno',
                    'Stockton',
                    'Modesto',
                    'Santa Rosa',
                    'Salinas',
                    'Vallejo',
                    'Berkeley',
                    'Richmond',
                    'Antioch',
                    'Concord',
                    'Fairfield',
                    'Vacaville',
                    'San Mateo',
                    'Fremont',
                    'Hayward',
                    'Sunnyvale',
                    'Santa Clara',
                    'Palo Alto',
                    'Mountain View',
                    'Cupertino',
                    'Los Altos',
                    'Milpitas',
                    'Union City',
                    'Newark',
                    'San Leandro',
                    'Castro Valley',
                    'San Lorenzo',
                    'Alameda',
                    'Emeryville',
                    'Albany',
                    'El Cerrito',
                    'San Rafael',
                    'Novato',
                    'Petaluma',
                    'Rohnert Park',
                    'Sebastopol'
                ]
            }
        };

        stateBoxes.forEach((box) => {
            box.addEventListener('click', function () {
                const stateId = (box as HTMLElement).dataset.state;
                const state = stateData[stateId];

                // Remove active class from all boxes
                stateBoxes.forEach((b) => b.classList.remove('active'));

                // Add active class to clicked box
                box.classList.add('active');

                // Update header
                selectedStateName.textContent = `Cities in ${state.name}`;

                // Display cities
                displayCities(state.cities);
            });

            // Keyboard accessibility
            box.addEventListener('keydown', function (e) {
                if ((e as KeyboardEvent).key === 'Enter' || (e as KeyboardEvent).key === ' ') {
                    e.preventDefault();
                    (box as HTMLElement).click();
                }
            });
        });

        function displayCities(cities) {
            citiesContainer.innerHTML = `
                <div style="display: flex; flex-wrap: wrap; gap: 8px; justify-content: flex-start; margin-bottom: 2rem; padding: 1.5rem; background: #ffffff; border-radius: 8px; border: 1px solid #e5e7eb; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);">
                    ${cities
                        .map(
                            (city) => `
                        <button style="background: #f3f4f6; color: #374151; padding: 6px 12px; border-radius: 20px; font-size: 14px; font-weight: 500; transition: all 0.2s ease; cursor: pointer; border: 1px solid #d1d5db; box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05); position: relative; display: inline-block; white-space: nowrap; text-align: center; min-width: fit-content; letter-spacing: 0.025em;" 
                                onmouseover="this.style.transform='translateY(-1px)'; this.style.background='#1c3c3d'; this.style.color='white'; this.style.borderColor='#1c3c3d'; this.style.boxShadow='0 2px 4px rgba(28, 60, 61, 0.2)';" 
                                onmouseout="this.style.transform='translateY(0px)'; this.style.background='#f3f4f6'; this.style.color='#374151'; this.style.borderColor='#d1d5db'; this.style.boxShadow='0 1px 2px rgba(0, 0, 0, 0.05)';" 
                                class='city-pill' type='button'>${city}</button>
                    `
                        )
                        .join('')}
                </div>
            `;

            // Add click effects to new city pills
            const cityPills = citiesContainer.querySelectorAll('.city-pill');
            cityPills.forEach((pill) => {
                pill.addEventListener('click', function () {
                    // Add a temporary pulse effect
                    (this as HTMLElement).style.animation = 'pulse 0.3s ease';

                    // Add a ripple effect
                    const ripple = document.createElement('span');
                    ripple.style.cssText = `
                        position: absolute;
                        border-radius: 50%;
                        background: rgba(255, 255, 255, 0.6);
                        transform: scale(0);
                        animation: ripple 0.6s linear;
                        left: 50%;
                        top: 50%;
                        width: 20px;
                        height: 20px;
                        margin-left: -10px;
                        margin-top: -10px;
                        pointer-events: none;
                    `;

                    this.appendChild(ripple);

                    setTimeout(() => {
                        (this as HTMLElement).style.animation = '';
                        if (ripple.parentNode) {
                            ripple.parentNode.removeChild(ripple);
                        }
                    }, 600);
                });
            });
        }
    });
</script>
