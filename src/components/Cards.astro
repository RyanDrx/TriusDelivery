---
import { marked } from 'marked';
import { type CardsSection } from 'types';
import Card from '@components/Card.astro';
import Section from '@components/Section.astro';
import ActionButton from '@components/ActionButton.astro';

interface Props extends CardsSection {
    'data-sb-field-path'?: string;
    class?: string;
}

const { heading, body, items, columns, class: className, ...rest } = Astro.props;
---

<Section {...rest} class:list={['bg-base-100', className]}>
    <div class='text-center mb-16'>
        {
            heading && (
                <h2 class='text-4xl lg:text-5xl font-black font-heading text-primary mb-6' data-sb-field-path='.heading'>
                    {heading}
                </h2>
            )
        }
        {
            body && (
                <div
                    class='text-xl text-base-content/70 max-w-3xl mx-auto font-body leading-relaxed'
                    data-sb-field-path='.body'
                    set:html={marked.parse(body)}
                />
            )
        }
    </div>

    {
        items && items?.length > 0 && (
            <div
                class:list={[
                    'grid gap-8 items-stretch',
                    columns === 'one' ? 'max-w-2xl mx-auto' : columns === 'two' ? 'lg:grid-cols-2 max-w-5xl mx-auto' : 'lg:grid-cols-3 max-w-7xl mx-auto'
                ]}
                data-sb-field-path='.items'
            >
                {items?.map((item, idx) => (
                    <div class='group hover:scale-105 transition-transform duration-300 w-full h-full flex'>
                        <div class='card bg-white shadow-lg border border-base-300 hover:shadow-2xl transition-all duration-300 h-full flex flex-col w-full'>
                            {/* Service Icon */}
                            <div class='pt-8 pb-4 px-8'>
                                <div
                                    class:list={[
                                        'w-16 h-16 mx-auto rounded-2xl flex items-center justify-center mb-6 shadow-lg',
                                        item.iconColor === 'accent'
                                            ? 'bg-gradient-to-br from-accent to-accent/80'
                                            : item.iconColor === 'primary'
                                              ? 'bg-gradient-to-br from-primary to-primary/80'
                                              : 'bg-gradient-to-br from-secondary to-secondary/80'
                                    ]}
                                >
                                    {item.icon && <iconify-icon icon={item.icon} width='32' height='32' style='color: white;' />}
                                </div>
                            </div>

                            <div class='card-body pt-0 px-8 pb-8 text-center flex flex-col flex-grow'>
                                {item.heading && (
                                    <h3
                                        class='card-title text-2xl font-black font-heading text-primary justify-center mb-4'
                                        data-sb-field-path={`.${idx}.heading`}
                                    >
                                        {item.heading}
                                    </h3>
                                )}
                                {item.body && (
                                    <div
                                        class='text-base-content/70 font-body leading-relaxed mb-6 flex-grow'
                                        data-sb-field-path={`.${idx}.body`}
                                        set:html={marked.parse(item.body)}
                                    />
                                )}

                                {/* Key Features List */}
                                {item.features && item.features.length > 0 && (
                                    <div class='mb-6 flex-grow'>
                                        <ul class='text-sm text-left space-y-2'>
                                            {item.features.map((feature, featureIdx) => (
                                                <li class='flex items-center text-base-content/60'>
                                                    <iconify-icon
                                                        icon={feature.icon}
                                                        width='16'
                                                        height='16'
                                                        style={`margin-right: 0.75rem; flex-shrink: 0; color: ${
                                                            item.iconColor === 'accent'
                                                                ? '#C53030'
                                                                : item.iconColor === 'primary'
                                                                  ? '#1c3c3d'
                                                                  : item.iconColor === 'secondary'
                                                                    ? '#9f7358'
                                                                    : '#4A5568'
                                                        };`}
                                                    />
                                                    {feature.text}
                                                </li>
                                            ))}
                                        </ul>
                                    </div>
                                )}

                                {item.cta && item.cta.length > 0 && (
                                    <div class='card-actions justify-center mt-auto pt-4' data-sb-field-path={`.${idx}.cta`}>
                                        {item.cta.map((action, actionIdx) => (
                                            <ActionButton
                                                {...action}
                                                class='btn-outline hover:btn-primary transition-all duration-300'
                                                showArrow={true}
                                                data-sb-field-path={`.${idx}.cta.${actionIdx}`}
                                            />
                                        ))}
                                    </div>
                                )}
                            </div>
                        </div>
                    </div>
                ))}
            </div>
        )
    }
</Section>
