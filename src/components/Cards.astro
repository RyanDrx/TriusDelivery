---
import { marked } from 'marked';
import { type CardsSection } from 'types';
import Card from '@components/Card.astro';
import Section from '@components/Section.astro';
import ActionButton from '@components/ActionButton.astro';

interface Props extends CardsSection {
    'data-sb-field-path'?: string;
    class?: string;
}

const { heading, body, items, columns, class: className, ...rest } = Astro.props;
---

<Section {...rest} class:list={[className]}>
    <div class='text-center mb-16'>
        <div class='bg-white/95 backdrop-blur-sm rounded-2xl p-8 shadow-lg border border-white/30 max-w-4xl mx-auto'>
            {
                heading && (
                    <h2 class='text-4xl lg:text-5xl font-black font-heading text-primary mb-6' data-sb-field-path='.heading'>
                        {heading}
                    </h2>
                )
            }
            {
                body && (
                    <div
                        class='text-xl text-base-content/70 max-w-3xl mx-auto font-body leading-relaxed'
                        data-sb-field-path='.body'
                        set:html={marked.parse(body)}
                    />
                )
            }
        </div>
    </div>

    {
        items && items?.length > 0 && (
            <div
                class:list={[
                    'grid gap-8 items-stretch',
                    columns === 'one'
                        ? 'max-w-2xl mx-auto'
                        : columns === 'two'
                          ? 'lg:grid-cols-2 max-w-5xl mx-auto'
                          : 'lg:grid-cols-3 max-w-7xl mx-auto'
                ]}
                data-sb-field-path='.items'
            >
                {items?.map((item, idx) => (
                    <div
                        class={`group hover:scale-105 transition-transform duration-300 w-full h-full flex ${(item as any).priority ? 'order-first lg:order-none' : ''}`}
                    >
                        <div
                            class={`card bg-white shadow-lg border hover:shadow-2xl transition-all duration-300 h-full flex flex-col w-full p-8 relative overflow-hidden ${(item as any).priority ? 'border-accent/30 ring-2 ring-accent/20 shadow-accent/10' : 'border-base-300'}`}
                        >
                            <!-- Banner Background Texture -->
                            <div class='absolute inset-0 opacity-3'>
                                <div
                                    class='absolute inset-0'
                                    style='background-image: url("/Banner/TRIUS_BANNER.webp"); background-size: cover; background-repeat: no-repeat; background-position: center; filter: grayscale(100%);'
                                >
                                </div>
                            </div>
                            <!-- White Overlay -->
                            <div class='absolute inset-0 bg-white/95'>
                            </div>
                            <!-- Content Wrapper -->
                            <div class='relative z-10 h-full flex flex-col'>
                            {/* Service Icon */}
                            <div class='pb-6'>
                                <div
                                    class:list={[
                                        'w-16 h-16 mx-auto rounded-2xl flex items-center justify-center mb-6 shadow-lg',
                                        item.iconColor === 'accent'
                                            ? 'bg-gradient-to-br from-accent to-accent/80'
                                            : item.iconColor === 'primary'
                                              ? 'bg-gradient-to-br from-primary to-primary/80'
                                              : 'bg-gradient-to-br from-secondary to-secondary/80'
                                    ]}
                                >
                                    {item.icon && <iconify-icon icon={item.icon} width='32' height='32' style='color: white;' />}
                                </div>
                            </div>

                            <div class='card-body pt-0 px-0 pb-0 text-center flex flex-col flex-grow'>
                                {item.heading && (
                                    <div class='mb-4'>
                                        <h3
                                            class='card-title text-2xl font-black font-heading text-primary justify-center mb-2'
                                            data-sb-field-path={`.${idx}.heading`}
                                        >
                                            {item.heading}
                                        </h3>
                                        {(item as any).subheading && (
                                            <p class='text-sm font-semibold text-base-content/80 uppercase tracking-wide'>
                                                {(item as any).subheading}
                                            </p>
                                        )}
                                    </div>
                                )}
                                {item.body && (
                                    <div
                                        class='text-base-content/70 font-body leading-relaxed mb-6 flex-grow'
                                        data-sb-field-path={`.${idx}.body`}
                                        set:html={marked.parse(item.body)}
                                    />
                                )}

                                {/* Key Features List */}
                                {item.features && item.features.length > 0 && (
                                    <div class='mb-6 flex-grow'>
                                        <ul class='text-sm space-y-3'>
                                            {item.features.map((feature, featureIdx) => (
                                                <li class='flex items-center justify-center text-base-content/70 font-medium'>
                                                    <iconify-icon
                                                        icon={feature.icon}
                                                        width='18'
                                                        height='18'
                                                        style={`margin-right: 0.5rem; flex-shrink: 0; color: ${
                                                            item.iconColor === 'accent'
                                                                ? '#C53030'
                                                                : item.iconColor === 'primary'
                                                                  ? '#1c3c3d'
                                                                  : item.iconColor === 'secondary'
                                                                    ? '#2f855a'
                                                                    : '#4A5568'
                                                        };`}
                                                    />
                                                    {feature.text}
                                                </li>
                                            ))}
                                        </ul>
                                    </div>
                                )}

                                {item.cta && item.cta.length > 0 && (
                                    <div class='card-actions justify-center mt-auto pt-6' data-sb-field-path={`.${idx}.cta`}>
                                        {item.cta.map((action, actionIdx) => (
                                            <ActionButton
                                                {...action}
                                                class={`btn btn-lg font-bold px-8 py-3 w-full transition-all duration-300 hover:scale-105 hover:-translate-y-1 shadow-lg hover:shadow-xl ${
                                                    action._type === 'actionButton' && (action as any).theme === 'accent'
                                                        ? 'bg-gradient-to-r from-accent to-accent-dark text-white border-0 hover:shadow-accent/30'
                                                        : action._type === 'actionButton' && (action as any).theme === 'primary'
                                                          ? 'bg-gradient-to-r from-primary to-primary-dark text-white border-0 hover:shadow-primary/30'
                                                          : action._type === 'actionButton' && (action as any).theme === 'secondary'
                                                            ? 'bg-gradient-to-r from-secondary to-secondary-dark text-white border-0 hover:shadow-secondary/30'
                                                            : 'btn-outline border-2 hover:scale-105'
                                                }`}
                                                showArrow={false}
                                                data-sb-field-path={`.${idx}.cta.${actionIdx}`}
                                            />
                                        ))}
                                    </div>
                                )}
                            </div>
                            </div>
                        </div>
                    </div>
                ))}
            </div>
        )
    }
</Section>
